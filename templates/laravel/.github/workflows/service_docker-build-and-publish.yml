on:
  workflow_call:
    inputs:
      platforms:
        type: string
        default: 'linux/amd64'
      docker-tags:
        required: true
        type: string
      dockerfile:
        type: string
        default: './Dockerfile'
      target:
        type: string
        default: ''
      environment:
        type: string
        required: true

env:
  DOCKER_COMPOSE_CMD: docker compose -f docker-compose.yml -f docker-compose.ci.yml

jobs:
  docker-publish:
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore composer cache (if available)
        id: composer-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-vendor-${{ hashFiles('composer.lock') }}

      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: List the composer packages
        continue-on-error: true
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer show --locked
          
      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: Install Composer dependencies
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer install --optimize-autoloader --no-interaction --no-progress --no-ansi
      
      - name: Set env file
        run: |
          echo $BASE_64_SECRET | base64 -d > .env
          chmod 600 .env
        env:
          BASE_64_SECRET: ${{ secrets.ENV_FILE_BASE64 }}
      
      - name: docker-build-action
        uses: serversideup/github-action-docker-build@v5
        with:
          tags: "${{ inputs.docker-tags }}"
          dockerfile: "${{ inputs.dockerfile }}"
          registry: "ghcr.io"
          registry-username: "${{ github.actor }}"
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          platforms: "${{ inputs.platforms }}"
          target: "${{ inputs.target }}"